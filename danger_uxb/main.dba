`Project: danger_UXB
`Created: 12/04/2004 22:41:28

disable escapekey : randomize timer() : sync on : sync

global app_name as string
app_name = "danger UXB"
set window title app_name

type scores_t
  name as string
  score as string
endtype
global dim scores(2,9) as scores_t

type game_t
  sound as integer
  skill as integer
  score as integer
  lives as integer
  sheet as integer
endtype
global game as game_t

type boot_t
  x as integer
  y as integer
  last as integer
endtype
global dim boot(3) as boot_t

type tnt_t
  time as integer
  left as integer
  skull as integer
endtype
global tnt as tnt_t

type player_t
  x as integer
  y as integer
  direc as integer
  last as integer
  delay as integer
  last_input as integer
  input_delay as integer
endtype
global player as player_t
`direc
`1 = left : 2 = right
`3 = up   : 4 = down
`5 = scroll left : 6 = scroll right

`14x14 map area
global dim map(13,13) as integer
`0 = blank
`1 = tile
`2 = flag
`3 = tnt
`4 = skull
`5 = boot
`10 = player
`11 = top bar text

`Image numbers
`10,000 = intro images

`40x38
`load game images
load image "image\panel.png",1,1
load image "image\flag.png",2,1
load image "image\tnt.png",3,1
load image "image\skull.png",4,1
load image "image\boot.png",5,1

load image "image\man.png",10,1
load image "image\top.png",11,1

global stop as integer
stop = 0
i as integer

scores_load()

i = show_intro()
if i = 21 then show_instructions()

global close as integer

repeat

  show_options()
  
  new_game()
  game()
  scores_check()
  
  close = msgbox("Game over"+chr$(10)+"Play again?",36,app_name)
  
until close = 7

`save scores
scores_save()

end

`+++++++++++
`+Functions+
`+++++++++++

function game()
  `main game loop
  stop = 0
  repeat
    cls
    
    `control player
    player_control()
    if timer() - player.last > player.delay
      player_move()
      player.last = timer()
    endif
    
    draw_map()
    draw_player()
    
    if game.skill = 3
      if timer() - boot(0).last > 200
        boot_control()
        boot(0).last = timer()
      endif
      boot_hit()
      draw_boot()
    endif
    
    draw_text()
    
    sync
    if escapekey() then stop = 1
  until stop = 1
endfunction

function bonus()
  `bonus game loop
  local x as integer : local y as integer : local down as integer : local win as integer : local height as integer
  `fill map with tiles
  for y = 0 to 13
    for x = 0 to 13
      map(x,y) = 1
    next x
  next y
  `fill bottom layer with skulls
  for x = 0 to 13
    map(x,13) = 4
  next x
  `position the flag
  map(rnd(13),13) = 2
  draw_map()
  sync
  wait player.delay
  player.last = timer()
  player.x = 0 : player.y = 0
  map(0,0) = 0
  `main demo loop
  repeat
    cls
    `input
    if spacekey() and down = 0
      down = 1
      height = 15 - player.y
    endif
    
    if timer() - player.last > (player.delay/2)
      `move player across
      if down = 0
        inc player.x
        if player.x > 13
          player.x = 0
          inc player.y
        endif
      else
        `move player straight down
        inc player.y
      endif
      `clear player square
      if player.y < 13
        map(player.x,player.y) = 0
      else
        `check for flag or skull
        if map(player.x,player.y) = 2
          `it's a flag so we win
          win = 1
          map(player.x,player.y) = 0
        endif
      endif
      player.last = timer()
    endif
    
    draw_map()
    draw_player()
    draw_text()
    
    sync
  until player.y = 13
  cls
  draw_map()
  draw_player()
  draw_text()
  if win = 1
    inc game.score,(height * 500)
    text (screen width()/2)-text width("BONUS = "+str$(height * 500)),50,"BONUS = "+str$(height * 500)
  endif
  sync
  wait 1000
  new_map()
endfunction

function new_map()
  `creates a new map in map()
  local x as integer : local y as integer : local i as integer
  repeat
    `
  until scancode() = 0
  for y = 0 to 13
    for x = 0 to 13
      map(x,y) = 1
    next x
  next y
  `randomly postion some skulls
  `just do 5 + game.sheet for know
  tnt.skull = 0
  for i = 0 to 5+game.sheet
    repeat
      x = rnd(13)
      y = rnd(13)
    until map(x,y) = 1 and x <> 6 and y <> 6
    map(x,y) = 4
    inc tnt.skull
  next i
  `random position flags
  for i = 0 to game.sheet + 2
    repeat
      x = rnd(13)
      y = rnd(13)
    until map(x,y) = 1 and x <> 6 and y <> 6
    map(x,y) = 2
  next i
  `position tnt
  tnt.left = 5
  new_tnt()
  `position boots
  boot(0).x = 4 : boot(0).y = 0
  boot(1).x = 4 : boot(1).y = 13
  boot(2).x = 9 : boot(2).y = 0
  boot(3).x = 9 : boot(3).y = 13
  `position player
  player.x = 6
  player.y = 6
  player.direc = 0
  map(player.x,player.y) = 0
  
  player.last = timer()
  player.last_input = timer()
endfunction

function new_game()
  `clears all variables etc in preperation for a new game.
  local i as integer
  
  `game.
  game.score = 0
  game.lives = 3
  game.sheet = 1
  
  `player
  player.delay = 110
  player.input_delay = 30
  
  `boots
  for i = 0 to 3
    boot(i).last = timer()
  next i
  
  `make new map
  new_map()
endfunction
